name: build_workflow

on:
  push:
    branches:
      - main
  pull_request:


jobs:
  build:
    outputs:
      output1: ${{steps.step1.outputs.pushed_tag}}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image
        id: step1
        run: |
          modules=$(find . -type f -name Dockerfile -exec dirname {} \;)

          # Собираем образы для каждого модуля
          mvn clean package
          for module in $modules; do  
            module_name=$(basename $module)
            docker build -t $module_name $module
          
            githubBranchName=${GITHUB_REF_NAME}
          
            if [ ${GITHUB_EVENT_NAME} == 'pull_request' ]; then
              githubBranchName=${GITHUB_HEAD_REF}
            fi
          
            git_hash=$(git rev-parse --short ${GITHUB_SHA})
          
            docker tag $module_name ${{ secrets.DOCKER_USERNAME }}/$module_name:$githubBranchName-$git_hash
            docker push ${{ secrets.DOCKER_USERNAME }}/$module_name:$githubBranchName-$git_hash
          
            # put pushed tag to output1
            echo "pushed_tag=$githubBranchName-$git_hash" >> "$GITHUB_OUTPUT"
          
            # put repository name to output2
            # API_TOKEN_BASE64=`echo -n ${{ secrets.DOCKER_USERNAME }}/proga | base64 -w 0`
            # API_ENCODED=`echo -n $API_TOKEN_BASE64 | base64 --decode`
            # echo -n "repository_name=$API_ENCODED" >> "$GITHUB_OUTPUT"
        
            if [ ${GITHUB_REF} = 'refs/heads/main' ]; then
              docker tag $module_name ${{ secrets.DOCKER_USERNAME }}/module_name:latest
              docker push ${{ secrets.DOCKER_USERNAME }}/module_name:latest
            fi
          done

  autotest:
    needs: build
    uses: ./.github/workflows/autotests-hw6.yml
    with:
      chart-path: ./proga
      converter-image-name: user24jdj4/converter
      accounts-image-name: user24jdj4/accounts
      image-tag: ${{needs.build.outputs.output1}}
    secrets:
      HSE_LOKI_TOKEN: ${{ secrets.HSE_LOKI_TOKEN }}

